name: Build and push metadata-service for single tenants
on:
  workflow_dispatch: {}
  push:
    branches:
      - production

env:
  TAGNAME: "us-central1-docker.pkg.dev/khulnasoft-production/khulnasoft-repo/metadata-service:build_b${{github.run_number}}"
  ARGOCD_CLI_VERSION: "2.10.6"

jobs:
  deploy-khulnasoft:
    runs-on: [ubuntu-latest]

    permissions:
        contents: 'write'
        id-token: 'write'

    steps:
      - name : Checkout
        uses: actions/checkout@v4

      - id: dockerx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: projects/67590289846/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service_account: github-actions@khulnasoft-production.iam.gserviceaccount.com
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set short commit SHA and app version as environment variables
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
          echo "APP_VERSION=b${GITHUB_RUN_NUMBER}_$calculatedSha" >> $GITHUB_ENV

      - name: Build and push
        run: |
          docker build --build-arg APP_VERSION=${{ env.APP_VERSION }} -t $TAGNAME .
          docker push $TAGNAME
 
      - name: Install Argo CD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/v$ARGOCD_CLI_VERSION/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: Log in to Argo CD HiBob ST
        env:
          ARGOCD_SERVER: argocd.hibob.st.khulnasoft.com
          ARGOCD_USERNAME: admin
          ARGOCD_PASSWORD: ${{ secrets.ST_HIBOB_ARGOCD_PASSWORD }}
        run: |
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --grpc-web

      - name: Deploy to Production ArgoCD HiBob ST
        env:
          HOME: .
        run: |
            argocd app create metadata-service \
              --project khulnasoft \
              --repo https://github.com/KhulnaSoft/metadata-service.git \
              --path helm \
              --revision refs/heads/production \
              --sync-policy automatic \
              --sync-option CreateNamespace=true \
              --self-heal \
              --dest-namespace metadata-service \
              --helm-set image="$TAGNAME" \
              --dest-server https://kubernetes.default.svc \
              --upsert

      - name: Log in to Argo CD Taxfix ST
        env:
          ARGOCD_SERVER: argocd.taxfix.st.khulnasoft.com
          ARGOCD_USERNAME: admin
          ARGOCD_PASSWORD: ${{ secrets.ST_TAXFIX_ARGOCD_PASSWORD }}
        run: |
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --grpc-web

      - name: Deploy to Production ArgoCD Taxfix ST
        env:
          HOME: .
        run: |
            argocd app create metadata-service \
              --project khulnasoft \
              --repo https://github.com/KhulnaSoft/metadata-service.git \
              --path helm \
              --revision refs/heads/production \
              --sync-policy automatic \
              --sync-option CreateNamespace=true \
              --self-heal \
              --dest-namespace metadata-service \
              --helm-set image="$TAGNAME" \
              --dest-server https://kubernetes.default.svc \
              --upsert

      - name: Log in to Argo CD Intuitive Surgical ST
        env:
          ARGOCD_SERVER: argocd.intuitive-surgical.st.khulnasoft.com
          ARGOCD_USERNAME: admin
          ARGOCD_PASSWORD: ${{ secrets.ST_INTUITIVE_SURGICAL_ARGOCD_PASSWORD }}
        run: |
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --grpc-web

      - name: Deploy to Production ArgoCD Intuitive Surgical ST
        env:
          HOME: .
        run: |
            argocd app create metadata-service \
              --project khulnasoft \
              --repo https://github.com/KhulnaSoft/metadata-service.git \
              --path helm \
              --revision refs/heads/production \
              --sync-policy automatic \
              --sync-option CreateNamespace=true \
              --self-heal \
              --dest-namespace metadata-service \
              --helm-set image="$TAGNAME" \
              --dest-server https://kubernetes.default.svc \
              --upsert
      - name: Log in to Argo CD Next Insurance ST
        env:
          ARGOCD_SERVER: argocd.next-insurance.st.khulnasoft.com
          ARGOCD_USERNAME: admin
          ARGOCD_PASSWORD: ${{ secrets.ST_NEXT_INSURANCE_ARGOCD_PASSWORD }}
        run: |
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --grpc-web

      - name: Deploy to Production ArgoCD Next Insurance ST
        env:
          HOME: .
        run: |
            argocd app create metadata-service \
              --project khulnasoft \
              --repo https://github.com/KhulnaSoft/metadata-service.git \
              --path helm \
              --revision refs/heads/production \
              --sync-policy automatic \
              --sync-option CreateNamespace=true \
              --self-heal \
              --dest-namespace metadata-service \
              --helm-set image="$TAGNAME" \
              --dest-server https://kubernetes.default.svc \
              --upsert        